/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.RoundRectangle2D;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import java.sql.*;

/**
 *
 * @author CycloneTG
 */
public class Login extends javax.swing.JFrame {
    
    private boolean islogin = false;
    private int staffId;
    private SqlConnector con = new SqlConnector();;
    
    HeaderCustom headerCustom = new HeaderCustom();

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();

        try {
            con.ConnectionDB("localhost:3306", "clothesshop", "root", "");
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        headerCustom.moveFrame(Header, islogin);

        UserName.setFocusable(false);
        Password.setFocusable(false);
        btnLogin.setFocusable(false);

        Container.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                clearFocus();
            }
        });
    }

    private String validateLogin(String username, String password) {
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        try {
            // Check if the username exists
            String queryUsername = "SELECT * FROM tblStaff WHERE username = ?";
            pstmt = con.dataCon.prepareStatement(queryUsername);
            pstmt.setString(1, username);
            rs = pstmt.executeQuery();

            if (rs.next()) {  // If username exists
                String storedPassword = rs.getString("password");

                // Check if the provided password matches
                if (storedPassword.equals(password)) {
                    staffId = rs.getInt("id");
                    return rs.getString("position").toLowerCase();  // Return the staff name if valid
                } else {
                    return "Incorrect password";  // Incorrect password
                }
            } else {
                return "Username not found";  // Username does not exist
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                }
                if (pstmt != null) {
                    pstmt.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public int getStaffId() {
        return staffId;
    }

    private void clearFocus() {
        UserName.setFocusable(false);
        Password.setFocusable(false);
        btnLogin.setFocusable(false);
    }

    private void gainFocus() {
        UserName.setFocusable(true);
        Password.setFocusable(true);
        btnLogin.setFocusable(true);
    }

    private void changeColor(JPanel panelName, Color color) {
        panelName.setBackground(color);
    }

    private void blinkErrorBorders(javax.swing.JComponent component, boolean isValid) {
        // Disable focus and button
        UserName.setFocusable(false);
        Password.setFocusable(false);
        btnLogin.setEnabled(false);

        final LineBorder errorBorder = new LineBorder(Color.RED, 1);
        final LineBorder defaultBorder = new LineBorder(Color.GRAY, 1);

        // Timer to blink the border color
        javax.swing.Timer blinkTimer = new javax.swing.Timer(150, new ActionListener() {
            private int count = 0;
            private boolean isRed = true;

            @Override
            public void actionPerformed(ActionEvent e) {
                if (count >= 5) {
                    ((javax.swing.Timer) e.getSource()).stop();
                    component.setBorder(isValid ? new LineBorder(Color.WHITE, 1) : errorBorder);
                    UserName.setFocusable(true);
                    Password.setFocusable(true);

                    btnLogin.setEnabled(true);
                    islogin = false;
                } else {
                    component.setBorder(isRed ? errorBorder : defaultBorder);
                    isRed = !isRed;
                    count++;
                }
            }
        });

        blinkTimer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Border = new javax.swing.JPanel();
        Header = new javax.swing.JPanel();
        pClose = new javax.swing.JPanel();
        Close = new javax.swing.JLabel();
        pMax = new javax.swing.JPanel();
        Max = new javax.swing.JLabel();
        pMin = new javax.swing.JPanel();
        Min = new javax.swing.JLabel();
        Logo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Title = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Body = new javax.swing.JPanel();
        Container = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        waterMark = new javax.swing.JLabel();
        UserName = new javax.swing.JTextField();
        Password = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Border.setBackground(new java.awt.Color(255, 255, 255));
        Border.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 102)));
        Border.setLayout(new java.awt.BorderLayout());

        Header.setBackground(new java.awt.Color(25, 25, 25));
        Header.setPreferredSize(new java.awt.Dimension(800, 40));
        Header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pClose.setBackground(new java.awt.Color(25, 25, 25));
        pClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pCloseMouseExited(evt);
            }
        });
        pClose.setLayout(new java.awt.BorderLayout());

        Close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close-24.png"))); // NOI18N
        pClose.add(Close, java.awt.BorderLayout.CENTER);

        Header.add(pClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 0, 50, 40));

        pMax.setBackground(new java.awt.Color(25, 25, 25));
        pMax.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pMax.setLayout(new java.awt.BorderLayout());

        Max.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Max.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/maximize-24.png"))); // NOI18N
        Max.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pMax.add(Max, java.awt.BorderLayout.CENTER);

        Header.add(pMax, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 50, 40));

        pMin.setBackground(new java.awt.Color(25, 25, 25));
        pMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pMinMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pMinMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pMinMouseExited(evt);
            }
        });
        pMin.setLayout(new java.awt.BorderLayout());

        Min.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Min.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/minimize-24.png"))); // NOI18N
        pMin.add(Min, java.awt.BorderLayout.CENTER);

        Header.add(pMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, 50, 40));

        Logo.setBackground(new java.awt.Color(25, 25, 25));
        Logo.setLayout(new java.awt.BorderLayout());

        jLabel2.setBackground(new java.awt.Color(25, 25, 25));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo-24.png"))); // NOI18N
        Logo.add(jLabel2, java.awt.BorderLayout.CENTER);

        Header.add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 40));

        Title.setBackground(new java.awt.Color(25, 25, 25));
        Title.setForeground(new java.awt.Color(255, 255, 255));
        Title.setLayout(new java.awt.BorderLayout());

        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LOGIN-(v2.0)");
        Title.add(jLabel1, java.awt.BorderLayout.CENTER);

        Header.add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 500, 40));

        Border.add(Header, java.awt.BorderLayout.PAGE_START);

        Body.setBackground(new java.awt.Color(35, 35, 35));
        Body.setLayout(new java.awt.BorderLayout());

        Container.setBackground(new java.awt.Color(35, 35, 35));
        Container.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("User Name:");
        Container.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, -1, -1));

        waterMark.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        waterMark.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo-100.png"))); // NOI18N
        Container.add(waterMark, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        UserName.setBackground(new java.awt.Color(102, 102, 102));
        UserName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        UserName.setForeground(new java.awt.Color(255, 255, 255));
        UserName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        UserName.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray, 1, true));
        UserName.setCaretColor(new java.awt.Color(255, 255, 255));
        UserName.setOpaque(true);
        UserName.setPreferredSize(new java.awt.Dimension(400, 35));
        UserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UserNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UserNameFocusLost(evt);
            }
        });
        UserName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserNameMouseClicked(evt);
            }
        });
        Container.add(UserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 400, 40));

        Password.setBackground(new java.awt.Color(102, 102, 102));
        Password.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Password.setForeground(new java.awt.Color(255, 255, 255));
        Password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Password.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray, 1, true));
        Password.setCaretColor(new java.awt.Color(255, 255, 255));
        Password.setMinimumSize(new java.awt.Dimension(100, 25));
        Password.setOpaque(true);
        Password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PasswordFocusLost(evt);
            }
        });
        Password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PasswordMouseClicked(evt);
            }
        });
        Container.add(Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 400, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Password:");
        Container.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, -1, -1));

        btnLogin.setBackground(new java.awt.Color(102, 102, 102));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.setAutoscrolls(true);
        btnLogin.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray, 1, true));
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.setMargin(new java.awt.Insets(2, 14, 2, 14));
        btnLogin.setOpaque(true);
        btnLogin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnLoginFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnLoginFocusLost(evt);
            }
        });
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLoginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLoginMouseExited(evt);
            }
        });
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        Container.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 400, 40));

        Body.add(Container, java.awt.BorderLayout.CENTER);

        Border.add(Body, java.awt.BorderLayout.CENTER);

        getContentPane().add(Border, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(800, 500));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void pCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pCloseMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_pCloseMouseClicked

    private void pCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pCloseMouseEntered
        // TODO add your handling code here:
        changeColor(pClose, new Color(255, 0, 0));
    }//GEN-LAST:event_pCloseMouseEntered

    private void pCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pCloseMouseExited
        // TODO add your handling code here:
        changeColor(pClose, new Color(25, 25, 25));
    }//GEN-LAST:event_pCloseMouseExited

    private void pMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pMinMouseClicked
        // TODO add your handling code here:
        this.setExtendedState(HIDE_ON_CLOSE);
    }//GEN-LAST:event_pMinMouseClicked

    private void pMinMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pMinMouseEntered
        // TODO add your handling code here:
        changeColor(pMin, new Color(102, 102, 102));
    }//GEN-LAST:event_pMinMouseEntered

    private void pMinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pMinMouseExited
        // TODO add your handling code here:
        changeColor(pMin, new Color(25, 25, 25));
    }//GEN-LAST:event_pMinMouseExited

    private void btnLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseEntered
        // TODO add your handling code here:
        btnLogin.setBackground(new Color(0, 102, 0));
    }//GEN-LAST:event_btnLoginMouseEntered

    private void btnLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseExited
        // TODO add your handling code here:
        btnLogin.setBackground(new Color(102, 102, 102));
    }//GEN-LAST:event_btnLoginMouseExited

    private void UserNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UserNameFocusGained
        // TODO add your handling code here:
        LineBorder uborder = new LineBorder(Color.WHITE, 2);
        UserName.setBorder(uborder);

        LineBorder pborder = new LineBorder(Color.GRAY, 1);
        Password.setBorder(pborder);

        UserName.setText("");
    }//GEN-LAST:event_UserNameFocusGained

    private void UserNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UserNameFocusLost
        // TODO add your handling code here:
        LineBorder border = new LineBorder(Color.GRAY, 1);
        UserName.setBorder(border);
    }//GEN-LAST:event_UserNameFocusLost

    private void PasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordFocusGained
        // TODO add your handling code here:
        LineBorder pborder = new LineBorder(Color.WHITE, 2);
        Password.setBorder(pborder);

        LineBorder uborder = new LineBorder(Color.GRAY, 1);
        UserName.setBorder(uborder);

        Password.setText("");
    }//GEN-LAST:event_PasswordFocusGained

    private void PasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordFocusLost
        // TODO add your handling code here:
        LineBorder border = new LineBorder(Color.GRAY, 1);
        Password.setBorder(border);
    }//GEN-LAST:event_PasswordFocusLost

    private void btnLoginFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnLoginFocusGained
        // TODO add your handling code here:
        LineBorder border = new LineBorder(Color.WHITE, 2);
        btnLogin.setBorder(border);
        btnLogin.setBackground(new Color(0, 102, 0));
    }//GEN-LAST:event_btnLoginFocusGained

    private void btnLoginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnLoginFocusLost
        // TODO add your handling code here:
        LineBorder border = new LineBorder(Color.GRAY, 1);
        btnLogin.setBorder(border);
        btnLogin.setBackground(new Color(102, 102, 102));
    }//GEN-LAST:event_btnLoginFocusLost

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        islogin = true;

        gainFocus();
        btnLogin.requestFocus();

// Resetting borders to default
        LineBorder defaultBorder = new LineBorder(Color.GRAY, 1);
        UserName.setBorder(defaultBorder);
        Password.setBorder(defaultBorder);

// Getting user input
        String inputUsername = UserName.getText().trim();
        String inputPassword = new String(Password.getPassword());

// Call validateLogin once and get the result
        String loginResult = validateLogin(inputUsername, inputPassword);

// Check if the username and password are valid
        boolean usernameValid = inputUsername.length() > 0 && !"Username not found".equals(loginResult);
        boolean passwordValid = inputPassword.length() > 0 && !"Incorrect password".equals(loginResult);

        if (usernameValid && passwordValid) {
            // Clear the input fields
            UserName.setText("");
            Password.setText("");
            int staffId = getStaffId();

            // Proceed to the next step in your application based on the position
            if ("admin".equals(loginResult)) {
                this.dispose();
                Dashboard dashboard = new Dashboard(staffId);
                dashboard.setVisible(true);
            } else {
                this.dispose();
                Sell sell = new Sell(staffId);
                sell.setVisible(true);
            }
        } else {
            // Create a blinking effect based on the validity of each component
            if (!usernameValid) {
                blinkErrorBorders(UserName, false);
                passwordValid = false;
            }

            if (!passwordValid) {
                blinkErrorBorders(Password, false);
            }
        }

    }//GEN-LAST:event_btnLoginActionPerformed

    private void UserNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserNameMouseClicked
        // TODO add your handling code here:
        if (!islogin) {
            gainFocus();
            UserName.requestFocus();
        }
    }//GEN-LAST:event_UserNameMouseClicked

    private void PasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PasswordMouseClicked
        // TODO add your handling code here:
        if (!islogin) {
            gainFocus();
            Password.requestFocus();
        }
    }//GEN-LAST:event_PasswordMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Body;
    private javax.swing.JPanel Border;
    private javax.swing.JLabel Close;
    private javax.swing.JPanel Container;
    private javax.swing.JPanel Header;
    private javax.swing.JPanel Logo;
    private javax.swing.JLabel Max;
    private javax.swing.JLabel Min;
    private javax.swing.JPasswordField Password;
    private javax.swing.JPanel Title;
    private javax.swing.JTextField UserName;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel pClose;
    private javax.swing.JPanel pMax;
    private javax.swing.JPanel pMin;
    private javax.swing.JLabel waterMark;
    // End of variables declaration//GEN-END:variables
}
